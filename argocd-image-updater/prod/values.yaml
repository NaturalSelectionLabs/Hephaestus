metrics:
  # -- Deploy metrics service
  enabled: true
  service:
    # -- Metrics service annotations
    annotations: {}
    # -- Metrics service labels
    labels: {}
    # -- Metrics service port
    servicePort: 8081
  serviceMonitor:
    # -- Enable a prometheus ServiceMonitor
    enabled: true
    # -- Prometheus ServiceMonitor interval
    interval: 30s
    # -- Prometheus [RelabelConfigs] to apply to samples before scraping
    relabelings: []
    # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion
    metricRelabelings: []
    # -- Prometheus ServiceMonitor selector
    selector: {}
    # promtheus: kube-prometheus

    # -- Prometheus ServiceMonitor namespace
    namespace: ""
    # -- Prometheus ServiceMonitor labels
    additionalLabels: {}
extraArgs:
  # - --disable-kubernetes
  # - --dry-run
  # - --health-port
  # - 8080
   - --interval
   - 5m
  # - --kubeconfig
  # - ~/.kube/config
  # - --match-application-name
  # - staging-*
  # - --max-concurrency
  # - 5
  # - --once
  # - --registries-conf-path
# - /app/config/registries.conf
config:
  registries:
     - name: Docker Hub
       api_url: https://registry-1.docker.io
       ping: yes
       credentials: pullsecret:argo/dockerhub-secret
       defaultns: library
    # - name: Google Container Registry
    #   api_url: https://gcr.io
    #   prefix: gcr.io
    #   ping: no
    #   credentials: pullsecret:foo/bar
    # - name: RedHat Quay
    #   api_url: https://quay.io
    #   ping: no
    #   prefix: quay.io
    #   credentials: env:REGISTRY_SECRET
    # - name: ECR
    #   api_url: https://123456789.dkr.ecr.eu-west-1.amazonaws.com
    #   prefix: 123456789.dkr.ecr.eu-west-1.amazonaws.com
    #   ping: yes
    #   insecure: no
  #   credentials: ext:/scripts/auth1.sh
  #   credsexpire: 10h