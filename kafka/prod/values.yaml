global:
  storageClass: "standard"

heapOpts: -Xmx4096m -Xms4096m
numPartitions: 3
logRetentionBytes: "30000000000"
deleteTopicEnable: true
autoCreateTopicsEnable: true
maxMessageBytes: _10485760

replicaCount: 3
containerPorts:
  client: 9092
  internal: 9093
  external: 9094
resources:
 limits:
   cpu: '8'
   memory: 8Gi
 requests:
   cpu: '4'
   memory: 4Gi
nodeSelector: {}
tolerations: []
updateStrategy:
  type: RollingUpdate
  rollingUpdate: {}

externalAccess:
  enabled: true
  autoDiscovery:
    enabled: true
  service:
    type: LoadBalancer
    ports:
      external: 9094
    loadBalancerIPs: []
    loadBalancerNames: []
    loadBalancerAnnotations: []
    loadBalancerSourceRanges: []
    nodePorts: []
    useHostIPs: false
    usePodIPs: false
    domain: ""
    publishNotReadyAddresses: false
    labels: {}
    annotations:
      networking.gke.io/load-balancer-type: "Internal"
        #      cloud.google.com/l4-rbs: "enabled"
      networking.gke.io/internal-load-balancer-subnet: "prod-loadbalancer"
      networking.gke.io/internal-load-balancer-allow-global-access: "true"
    extraPorts: []

persistence:
  storageClass: "standard"
  size: 100Gi # actually it's 400GiB but we can upgrade sts's pvc config

livenessProbe:
  initialDelaySeconds: 300
readinessProbe:
  initialDelaySeconds: 60

rbac:
  create: true

metrics:
  kafka:
    enabled: true

kraft:
  enabled: false

zookeeper:
  enabled: true
  replicaCount: 3
  persistence:
    enabled: true
    storageClass: "standard"
    accessModes:
      - ReadWriteOnce
    size: 100Gi
