apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: pgvector-ha
spec:
  image: kindjeff/pgo-pgvector:ubi8-15.2-0
  postgresVersion: 15
  users:
    - name: postgres
  patroni:
    dynamicConfiguration:
      postgresql:
        parameters:
          shared_preload_libraries: vector
  instances:
    - name: pgha1
      replicas: 2
      dataVolumeClaimSpec:
        storageClassName: "standard"
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: 100Gi
          limits:
            cpu: 2Gi
            memory: 1000m
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  postgres-operator.crunchydata.com/cluster: pgvector-ha
                  postgres-operator.crunchydata.com/instance-set: pgha1
  backups:
    pgbackrest:
      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.41-4
      configuration:
      - secret:
          name: pgvector-ha-pgbackrest-secret
      global:
        repo1-path: /pgbackrest/postgres-operator/pgvector-ha/repo1
      repos:
      - name: repo1
        s3:
          bucket: "rss3-crdb"
          endpoint: "oss-us-east-1-internal.aliyuncs.com"
          region: "us-east-1"
  proxy:
    pgBouncer:
      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbouncer:ubi8-1.18-0
      replicas: 2
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  postgres-operator.crunchydata.com/cluster: pgvector-ha
                  postgres-operator.crunchydata.com/role: pgbouncer
