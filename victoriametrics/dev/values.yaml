nameOverride: ""
fullnameOverride: "victoriametrics"
tenant: "0"
# -- If this chart is used in "Argocd" with "releaseName" field then
# -- VMServiceScrapes couldn't select the proper services.
# -- For correct working need set value 'argocdReleaseOverride=$ARGOCD_APP_NAME'
argocdReleaseOverride: ""

## -- Create default rules for monitoring the cluster
defaultRules:
  create: true
  rules:
    etcd: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverSlos: true
    kubelet: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: true
    kubeStateMetrics: true
    network: true
    node: true
    vmagent: true
    vmsingle: true
    vmcluster: false
    vmhealth: true
    alertmanager: true

  # -- Runbook url prefix for default rules
  runbookUrl: https://runbooks.prometheus-operator.dev/runbooks
  ## Reduce app namespace alert scope
  appNamespacesTarget: ".*"

  # -- Labels for default rules
  labels: {}
  # -- Annotations for default rules
  annotations: {}

  # -- Additional labels for PrometheusRule alerts
  additionalRuleLabels: {}

## -- Create default dashboards
defaultDashboardsEnabled: true

## -- Create experimental dashboards
experimentalDashboardsEnabled: true

# Provide custom recording or alerting rules to be deployed into the cluster.
additionalVictoriaMetricsMap:
#    rule-name:
#     groups:
#     - name: my_group
#       rules:
#       - record: my_record
#         expr: 100 * my_record

victoria-metrics-operator:
  operator:
    # -- By default, operator converts prometheus-operator objects.
    disable_prometheus_converter: false
    #    prometheus_converter_add_argocd_ignore_annotations: true
    enable_converter_ownership: true

# -- Configures vmsingle params
vmsingle:
  annotations: {}
  enabled: true
  # spec for VMSingle crd
  # https://docs.victoriametrics.com/operator/api.html#vmsinglespec
  spec:
    image:
      tag: v1.87.1
    retentionPeriod: "14d"
    replicaCount: 1
    extraArgs: {}
    storage:
      storageClassName: standard
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 200Gi

alertmanager:
  enabled: true
  spec:
    configSecret: "vm-alertmanager-config"
    externalURL: https://alertmanager.prod.naturalselectionlabs.com

vmalert:
  enabled: true
  spec:
    extraArgs:
      external.url: https://grafana.nsl.xyz

vmagent:
  enabled: true
  annotations: {}
  # https://docs.victoriametrics.com/operator/api.html#vmagentremotewritespec
  # defined spec will be added to the remoteWrite configuration of VMAgent
  additionalRemoteWrites:
    []
    #- url: http://some-remote-write/api/v1/write
  # spec for VMAgent crd
  # https://docs.victoriametrics.com/operator/blob/master/docs/api.MD#vmagentspec
  spec:
    podMetadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "vmagent"
        vault.hashicorp.com/agent-inject-token: "true"
    selectAllByDefault: true
    image:
      tag: v1.87.1
    scrapeInterval: 25s
    externalLabels:
      cluster: dev
      region: us-central1
      provider: gcp
      zone: us-central1-a
    extraArgs:
      promscrape.streamParse: "true"
      promscrape.kubernetesSDCheckInterval: 60s
    additionalScrapeConfigs:
      key: prometheus-additional.yaml
      name: additional-scrape-configs

grafana:
  enabled: false

# prometheus-node-exporter dependency chart configuration. For possible values refer to https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-node-exporter/values.yaml
prometheus-node-exporter:
  enabled: true

  resources:
    requests:
      cpu: 0.02
      memory: 64Mi
  ## all values for prometheus-node-exporter helm chart can be specified here
  podLabels:
    ## Add the 'node-exporter' label to be used by serviceMonitor to match standard common usage in rules and grafana dashboards
    ##
    jobLabel: node-exporter
  extraArgs:
    - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$

  vmServiceScrape:
    # wheter we should create a service scrape resource for node-exporter
    enabled: true

    # spec for VMServiceScrape crd
    # https://docs.victoriametrics.com/operator/api.html#vmservicescrapespec
    spec:
      jobLabel: jobLabel
      endpoints:
        - port: metrics
          metricRelabelConfigs:
            - action: drop
              source_labels: [mountpoint]
              regex: "/var/lib/kubelet/pods.+"
# kube-state-metrics dependency chart configuration. For possible values refer to https://github.com/kubernetes/kube-state-metrics/blob/master/charts/kube-state-metrics/values.yaml
kube-state-metrics:
  enabled: true
  ## all values for kube-state-metrics helm chart can be specified here
  image:
    tag: "v2.8.0"
  resources:
    requests:
      cpu: 0.02
      memory: 128Mi
  # spec for VMServiceScrape crd
  # https://docs.victoriametrics.com/operator/api.html#vmservicescrapespec
  vmServiceScrape:
    spec: {}

#################################################
###              Service Monitors           #####
#################################################
## Component scraping the kubelets
kubelet:
  enabled: true

  # -- Enable scraping /metrics/cadvisor from kubelet's service
  cadvisor: true
  # -- Enable scraping /metrics/probes from kubelet's service
  probes: true
  # spec for VMNodeScrape crd
  # https://docs.victoriametrics.com/operator/api.html#vmnodescrapespec
  spec:
    scheme: "https"
    honorLabels: true
    interval: "30s"
    scrapeTimeout: "5s"
    tlsConfig:
      insecureSkipVerify: true
      caFile: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    bearerTokenFile: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    # drop high cardinality label and useless metrics for cadvisor and kubelet
    metricRelabelConfigs:
      - action: labeldrop
        regex: (uid)
      - action: labeldrop
        regex: (id|name)
      - action: drop
        source_labels: [__name__]
        regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    relabelConfigs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - sourceLabels: [__metrics_path__]
        targetLabel: metrics_path
      - targetLabel: "job"
        replacement: "kubelet"

# -- Component scraping the kube api server
kubeApiServer:
  enabled: true
  # spec for VMServiceScrape crd
  # https://docs.victoriametrics.com/operator/api.html#vmservicescrapespec
  spec:
    endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        # bearerTokenSecret:
        #   key: ""
        port: https
        scheme: https
        tlsConfig:
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          serverName: kubernetes
    jobLabel: component
    namespaceSelector:
      matchNames:
        - default
    selector:
      matchLabels:
        component: apiserver
        provider: kubernetes

# -- Disable kubeControllerManager/coreDNS/kubeEtcd/kubeScheduler for GKE managed kubernetes
kubeControllerManager:
  enabled: false
coreDns:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false