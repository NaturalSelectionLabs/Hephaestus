service:
  enabled: true
  type: LoadBalancer
  annotations:
#    cloud.google.com/l4-rbs: "enabled"
    networking.gke.io/internal-load-balancer-subnet: "dev-loadbalancer"
    networking.gke.io/internal-load-balancer-allow-global-access: "true"
deployment:
  kind: Deployment
  replicas: 3
ports:
  web:
    hostPort: "8000"  # for HTTP
ingressRoute:
  dashboard:
    enabled: true
    matchRule: Host(`traefik.dev.naturalselectionlabs.com`)
    entryPoints: ["websecure"]
    middlewares:
      - name: traefik-forward-auth
logs:
  access:
    enabled: true
    bufferingsize: "100"
    format: "json"
additionalArguments:
  - "--entryPoints.websecure.forwardedHeaders.insecure"
  - "--entryPoints.web.forwardedHeaders.insecure"
instanceLabelOverride: traefik

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: '{{ template "traefik.name" . }}'
        topologyKey: kubernetes.io/hostname

providers:
  kubernetesIngress:
    publishedService:
      enabled: true
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: true
    allowExternalNameServices: true
  file:
    enabled: true
    # -- Allows Traefik to automatically watch for file changes
    watch: false
    # -- File content (YAML format, go template supported) (see https://doc.traefik.io/traefik/providers/file/)
    content: |
      http:
        routers:
          graph:
            rule: "Host(`graph.testnet.rss3.io`)"
            service: "graph"
        services:
          graph:
            loadBalancer:
              servers:
              - url: "http://10.0.0.41:8000/"
    #       rule: Path(`/foo`)
metrics:
  prometheus:
    entryPoint: metrics
    addEntryPointsLabels: true
    addRoutersLabels: true
    addServicesLabels: true
    buckets: "0.005,0.01,0.1,0.5,2.0,5.0,15.0,60.0"
    service:
      enabled: true
    disableAPICheck: true
    serviceMonitor:
      jobLabel: traefik
      interval: 30s
      honorLabels: true
      metricRelabelings:
        - sourceLabels:
            - service
          regex: ^([^-]+)-.+-.*$
          replacement: ${1}
          targetLabel: target_namespace
        - sourceLabels:
            - service
          regex: ^[^-]+-(.*)-[^@]+@.*$
          replacement: ${1}
          targetLabel: target_service
        - sourceLabels:
            - __meta_kubernetes_pod_node_name
          separator: ;
          regex: ^(.*)$
          targetLabel: nodename
          replacement: $1
          action: replace
#  openTelemetry:
#    address: jaeger-collector:4318
tracing:
  jaeger:
    samplingServerURL: http://jaeger-agent.guardian:5778/sampling
    localAgentHostPort: jaeger-agent.guardian:6831
    disableAttemptReconnecting: false