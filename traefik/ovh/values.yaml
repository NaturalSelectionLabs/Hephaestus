service:
  enabled: true
  type: NodePort
  externalIPs:
    - 142.44.140.96
ports:
  web:
    nodePort: 30080
  websecure:
    nodePort: 30443
deployment:
  kind: Deployment
  replicas: 3
ingressRoute:
  dashboard:
    enabled: true
    matchRule: Host(`traefik.ovh.naturalselectionlabs.com`)
    entryPoints: ["websecure"]
    middlewares:
      - name: traefik-forward-auth

tlsStore:
  default:
    defaultCertificate:
      secretName: traefik-default-cert

logs:
  access:
    enabled: true
    bufferingsize: "100"
    format: "json"
additionalArguments:
  - "--entryPoints.websecure.forwardedHeaders.insecure"
  - "--entryPoints.web.forwardedHeaders.insecure"
instanceLabelOverride: traefik

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: '{{ template "traefik.name" . }}'
          topologyKey: kubernetes.io/hostname

providers:
  kubernetesIngress:
    publishedService:
      enabled: true
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: true
    allowExternalNameServices: true

metrics:
  prometheus:
    entryPoint: metrics
    addEntryPointsLabels: true
    addRoutersLabels: true
    addServicesLabels: true
    buckets: "0.005,0.01,0.1,0.5,2.0,5.0,15.0,60.0"
    service:
      enabled: true
    disableAPICheck: true
    serviceMonitor:
      jobLabel: traefik
      interval: 30s
      honorLabels: true
      metricRelabelings:
        - sourceLabels:
            - service
          regex: ^([^-]+)-.+-.*$
          replacement: ${1}
          targetLabel: target_namespace
        - sourceLabels:
            - service
          regex: ^[^-]+-(.*)-[^@]+@.*$
          replacement: ${1}
          targetLabel: target_service
        - sourceLabels:
            - __meta_kubernetes_pod_node_name
          separator: ;
          regex: ^(.*)$
          targetLabel: nodename
          replacement: $1
          action: replace
